name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Accept Android SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
      
    - name: Install required SDK components
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"
        
    - name: Build Debug APK
      run: ./gradlew assembleDebug --stacktrace
      
    - name: Build Release APK
      run: ./gradlew assembleRelease --stacktrace
      
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
        
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apk
        path: app/build/outputs/apk/release/app-release.apk
        retention-days: 30
        
    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: Release v1.0.${{ github.run_number }}
        body: |
          ## 哈友工具箱绕过器 APK
          
          ### 📱 下载说明
          - **app-debug.apk**: 调试版本，包含调试信息
          - **app-release.apk**: 发布版本，经过优化和混淆
          
          ### 🚀 使用方法
          1. 下载APK文件到Android设备
          2. 确保设备已获取Root权限
          3. 安装哈友工具箱应用
          4. 安装本绕过器APK
          5. 打开绕过器，授予Root权限
          6. 点击"启动绕过"开始使用
          
          ### ⚠️ 注意事项
          - 仅供学习研究使用
          - 需要Root权限
          - 请遵守相关法律法规
          
          ### 📋 系统要求
          - Android 5.0+ (API 21+)
          - Root权限
          - 已安装目标应用
        files: |
          app/build/outputs/apk/debug/app-debug.apk
          app/build/outputs/apk/release/app-release.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build Summary
      run: |
        echo "## 🎉 构建完成" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 APK文件" >> $GITHUB_STEP_SUMMARY
        echo "- Debug APK: $(ls -lh app/build/outputs/apk/debug/app-debug.apk | awk '{print $5}')" >> $GITHUB_STEP_SUMMARY
        echo "- Release APK: $(ls -lh app/build/outputs/apk/release/app-release.apk | awk '{print $5}')" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📥 下载方式" >> $GITHUB_STEP_SUMMARY
        echo "1. 点击上方 Artifacts 下载APK文件" >> $GITHUB_STEP_SUMMARY
        echo "2. 或在 Releases 页面下载发布版本" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ⚠️ 使用提醒" >> $GITHUB_STEP_SUMMARY
        echo "- 需要Root权限" >> $GITHUB_STEP_SUMMARY
        echo "- 仅供学习研究" >> $GITHUB_STEP_SUMMARY
        echo "- 请遵守法律法规" >> $GITHUB_STEP_SUMMARY